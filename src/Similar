Binary tree, level order, BFS, DFS
101, 102, 103, 104, 107

Construct binary tree preorder/inorder traversal
105, 106

Binary tree, Binary search tree, Binary search
108, 109

backtracking
51. N-Queens
52. N-Queens II

binary search
33. Search in Rotated Sorted Array
81. Search in Rotated Sorted Array II
153. Find Minimum in Rotated Sorted Array
34. Find First and Last Position of Element in Sorted Array
278. First Bad Version
35. Search Insert Position
374. Guess Number Higher or Lower
50. Pow(x, n) (Math)

matrix
36. Valid Sudoku
48. Rotate Image
51. N-Queens
52. N-Queens II
54. Spiral Matrix
59. Spiral Matrix II

find missing number/duplicates from array
41. First Missing Positive
136. Single Number (bit manipulation)
268. Missing Number
287. Find the Duplicate Number
442. Find All Duplicates in an Array
448. Find All Numbers Disappeared in an Array

greedy
45. Jump Game II
55. Jump Game

DFS/BFS
1306. Jump Game III

anagram
49. Group Anagrams
242. Valid Anagram
249. Group Shifted Strings
438. Find All Anagrams in a String

Sliding window
438. Find All Anagrams in a String

Math
50. Pow(x, n)

Dynamic programing
53. Maximum Subarray
152. Maximum Product Subarray
    string conversion
        97. Interleaving String
        583. Delete Operation for Two Strings
        72. Edit Distance
        712. Minimum ASCII Delete Sum for Two Strings

LIS
300. Longest Increasing Subsequence
673. Number of Longest Increasing Subsequence
354. Russian Doll Envelopes
646. Maximum Length of Pair Chain



LinkedList
160. Intersection of Two Linked Lists


Interval
56. Merge Intervals
57. Insert Interval
252. Meeting Room
253. Meeting Room 2

排列组合 backtrack DFS
22. Generate Parentheses, consider number of open and close parentheses
17. Letter Combination of a Phone Number
39. Combination Sum
40. Combination Sum II
216. Combination Sum III
78. Subsets
90. Subsets II
46. Permutations
47. Permutations II
131. Palindrome Partitioning

Linkedlist

19. Remove Nth Node From End of List, two pointers(slow and fast) which maintain a gap of n, both move forward until fast reaches end, slow.next = slow.next.next
83. Remove Duplicates from Sorted List - only delete duplicates
82. Remove Duplicates from Sorted List II - delete all numbers and their duplicates
237. Delete Node in a Linked List - head not given, node given is the node that needs to be delete, change its value to next's and skip next
203. Remove Linked List Elements
206. Reverse Linked List
92. Reverse Linked List II
234. Palindrome Linked List - use slow and fast pointer to find mid element(be careful about odd or even number of nodes), reverse right half and compare values
141. Linked List Cycle
142. Linked List Cycle II
24. Swap Node in Pairs - awesome diagram: https://leetcode.com/problems/swap-nodes-in-pairs/discuss/11046/My-simple-JAVA-solution-for-share/186959
2. Add Two Numbers
160. Intersection of Two Linked Lists - get length of both lists, move/align longer list first and move both lists at the same time to reach the intersection

uncategorized
31. Next Permutation, from right to left find first element that breaks ascending order, swap with next largest element to its right and reverse the rest